components:
  schemas:
    Agency:
      type: object
      properties:
        id:
          type: string
        userId:
          type: number
        agencyName:
          type: string
        regNumber:
          type: string
        industry:
          type: string
        address:
          type: string
        state:
          type: string
        country:
          type: string
      example:
        id: 1
        userId: 2
        agencyName: "Platazion Inc."
        regNumber: "BN20381900"
        industry: "Entertainment"
        address: "12, Isaac John Str, GRA, Ikeja"
        state: "Lagos"
        country: "Nigeria"
    Manager:
      type: object
      properties:
        id:
          type: string
        userId:
          type: number
        agencyName:
          type: string
        regNumber:
          type: string
        industry:
          type: string
        address:
          type: string
        state:
          type: string
        country:
          type: string
      example:
        id: 1
        userId: 2
        agencyName: "Platazion Inc."
        regNumber: "BN20381900"
        industry: "Entertainment"
        address: "12, Isaac John Str, GRA, Ikeja"
        state: "Lagos"
        country: "Nigeria"
    Talent:
      type: object
      properties:
        id:
          type: integer
        AgencyId:
          type: integer
        ManagerId:
          type: integer
        AgencyManagerId:
          type: integer
        stageName:
          type: string
        industry:
          type: string
        bookingPrice:
          type: integer
      example:
        id: 1
        userId: 2
        agencyId: 2
        managerId: 2
        agencyManagerId: 2
        stageName: "Platazion Boyz"
        industry: "Entertainment"
        bookingPrice: 10000
    User:
      type: object
      properties:
        id:
          type: number
        email:
          type: string
          format: email
        fullName:
          type: string
        mobileNumber:
          type: string
        verificationType:
          type: string
        role:
          type: string
          enum: [USER, ADMIN, AGENCY, MANAGER, AGENCYMANAGER, TALENT]
      example:
        id: 1
        email: fake@example.com
        fullName: fake name
        mobileNumber: "08099999999"
        verificationType: "BVN"
        role: USER

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: "#/components/schemas/Token"
        refresh:
          $ref: "#/components/schemas/Token"

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    DuplicateGoal:
      description: Goal name already in use
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 400
            message: Goal name already in use
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 400
            message: Email already taken
    DuplicateUser:
      description: User already exist
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 400
            message: User already exist
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
