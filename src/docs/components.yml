components:
  schemas:
    Goal:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          description: must be unique
        description:
          type: string
        category:
          type: string
        progress:
          type: integer
        start_date:
          type: date
        finish_date:
          type: date
        task:
          type: string of array
        userId:
          type: integer
      example:
        name: AWS Certification
        description: Get certified in AWS Developer Associate by June 2024
        category: Career Goals
        progress: 10
        start_date: 01/01/2024
        finish_date: 05/30/2024
        task:
          [
            "Enroll in AWS developer course with Udemy",
            "Study and finish the course",
            "Take the exam",
          ]
        userId: 2
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        telephone:
          type: string
        name:
          type: string
        role:
          type: string
          enum: [USER, ADMIN]
      example:
        id: 5ebac534954b54139806c112
        email: fake@example.com
        telephone: "+2348077665544"
        name: fake name
        role: USER

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: "#/components/schemas/Token"
        refresh:
          $ref: "#/components/schemas/Token"

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    DuplicateGoal:
      description: Goal name already in use
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 400
            message: Goal name already in use
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 400
            message: Email already taken
    DuplicateUser:
      description: User already exist
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 400
            message: User already exist
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
